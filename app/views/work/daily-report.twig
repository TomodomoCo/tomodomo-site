{% set title = 'Next-level email newsletters for Baton Rouge Business Report' %}
{% extends 'layouts/base.twig' %}

{% block content %}

{% embed 'partials/_page.twig' with {
	id: "contact",
	classes: [
		'page--alt',
		'page--full-height',
		'page--padded',
	]
} %}
{% block content %}

{% embed 'partials/_article.twig' with {
	align: 'left',
} %}
{% block article_header %}
{% include 'partials/_image.twig' with {
	type: 'svg',
	file: 'businessreport',
	width: 250,
	alt: 'Baton Rouge Business Report logo',
	path: 'partials/svgs/client-logos/',
} %}
{% endblock %}

{% block article_content %}

<figure class="pull pull--right pull--wide">
	<img src="https://tomodomo.imgix.net/assets/img/portfolio/dailyreport-1.png?format=auto&crop=top,left&fit=crop&w=1200&h=1000" alt="" class="img img--standout">
</figure>

{% markdown %}
Louisiana Business Inc. publishes a number of special-interest magazines in the Baton Rouge metropolitan area, including the popular **Baton Route Business Report** and their **Daily Report**, a twice-daily email newsletter containing must-know local news. While rebuilding the larger Business Report website (and the websites of its sister publications), we worked with the Business Report team to devise a new approach for building, previewing, and sending the newsletters—all without leaving WordPress.

The Daily Report project consisted of two components: a custom interface for creating the emails within WordPress, and an interface allowing readers to view the stories from the newsletter with seamless infinite scrolling between articles.

We decided that emails would live in WordPress as a custom post type. This would let the Daily Report team benefit from editorial and approval workflows that we built for other elements of the project, while keeping the emails separate from other content types.

Leveraging WordPress’ existing plugin ecosystem, we settled on Custom Field Suite, a popular open source plugin, to power the interface. In addition to using Custom Field Suite on many of our projects, Tomodomo also regularly contributes code to CFS core. For this project, we built a custom “field type” that would let the Daily Report team search through the post database, filter posts by category, and insert them into the newsletter with custom link text.

The Daily Report team manages their list (over 50,000 subscribers) on MailChimp, which comes equipped with a powerful API. This allowed us to build a custom integration that synced newsletter drafts in WordPress with MailChimp campaign drafts, allowed editors to send preview emails from the newsletter editor, and—most importantly—made it possible to send the newsletter to subscribers simply by clicking the WordPress “Publish” button. To prevent sending mistakes, we also leveraged WordPress’ roles and capabilities system (so only certain users were authorised to send emails) and added a confirmation step into the publication process.

The front-end component, which allows email subscribers to view the articles linked in the newsletter on a unique landing page, was built primarily with the WordPress REST API. In fact, our integration was one of the first custom integrations built with the REST API, during its initial beta period.

When users click through from an email, they can view the requested story, and also scroll to see other stories linked from the same newsletter. A custom JavaScript application loads the newsletter data via a custom REST API endpoint, then loads individual stories as the user reaches the end of previous stories.

The result is a seamless newsletter experience for editors and users alike, all without leaving WordPress.
{% endmarkdown %}
{% endblock %}
{% endembed %}


{% endblock %}
{% endembed %}

{% endblock %}
